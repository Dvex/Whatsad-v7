<?php
/**
 * @file 
 * Adds a block with a series of icons which link off-site to other web presences.
 */

/**
 * Implementation of hook_block_info().
 */
function on_the_web_block_info() {
  $blocks[0] = array(
    'info' => t('On The Web'),
  );
  return $blocks;
}

/**
 * Implementation of hook_block_configure().
 */
function on_the_web_block_configure($delta = 0) {
  $form = array();
  if ($delta == 0) {
    
    $form['services'] = array(
      '#type' => 'fieldset',
      '#title' => t('Icons are provided for the following services'),
      '#description' => t('Please enter a fully-qualified URL for service you would like linked.'),
    );
    
    $services = on_the_web_get_services();
    foreach ($services as $service => $info) {
      $form['services'][$service] = array(
        '#type' => 'textfield',
        '#title' => t($info['name'] . ' Page'),
        '#default_value' => variable_get('on_the_web_' . $service . '_page', ''),
        '#description' => t('Please paste the full url, including http://'),
      );
    }
    $form['services']['feed'] = array(
      '#type' => 'checkbox',
      '#title' => t('Show a similar icon for the RSS feed.'),
      '#default_value' => variable_get('on_the_web_feed', FALSE),
      '#description' => t('Checking this box his will add an RSS feed icon from this block.'),
    );
    $form['settings'] = array(
      '#type' => 'fieldset',
      '#title' => t('Settings'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );
    $form['settings']['size'] = array(
      '#type' => 'select',
      '#title' => t('Icon size'),
      '#options' => array(
        'sm' => t('Small: 32px square'),
        'lg' => t('Large: 64px square'),
      ),
      '#default_value' => array(variable_get('on_the_web_size', 'sm')),
    );
    $form['settings']['sitename'] = array(
      '#type' => 'checkbox',
      '#title' => t('Use <a href="!url">Site name</a> in link titles', array('!url' => url('admin/config/system/site-information'))),
      '#default_value' => variable_get('on_the_web_sitename', TRUE),
      '#description' => t('Unchecking this box will use "us" as the title attribute for these links, instead of <em>Find !us on Facebook</em>.', array('!us' => variable_get('site_name', 'Drupal'))),
    );
    $form['settings']['target'] = array(
      '#type' => 'checkbox',
      '#title' => t('Open links in new windows'),
      '#default_value' => variable_get('on_the_web_target', TRUE),
      '#description' => t('Unchecking this box his will remove the target="_blank" attribute from these links.'),
    );
  }
  return $form;
}

 
/**
 * Implementation of hook_block_save().
 */
function on_the_web_block_save($delta = 0, $edit = array()) {
  // This example comes from node.module.
  if ($delta == 0) {
    $services = on_the_web_get_services();
    foreach ($services as $service => $info) {
      variable_set('on_the_web_' . $service . '_page', $edit[$service]);
    }
    variable_set('on_the_web_feed', $edit['feed']);
    variable_set('on_the_web_size', $edit['size']); 
    variable_set('on_the_web_sitename', $edit['sitename']);
    variable_set('on_the_web_target', $edit['target']);
  }
}
 
 
/**
 * Implementation of hook_block_view().
 */
function on_the_web_block_view($delta = 0) {
  $block = array(
    'subject' => t('Find Us On...'),
    'content' => on_the_web_display_block($delta)
  );
  
  return $block;
}

/**
 * Block Display
 *
 * @return 
 *    Content for block.
 */
function on_the_web_display_block($delta) {
  $output = '';
  
  // Get the appropriate name to use in links.
  if (variable_get('on_the_web_sitename', TRUE)) {
    $name = variable_get('site_name', 'Drupal');
  }
  else {
    $name = t('Us');
  }
  
  $services = on_the_web_get_services();
    
  foreach ($services as $service => $info) {
    $link = variable_get('on_the_web_' . $service . '_page', FALSE);
    if ($link) {
      $title = t('Find !us on !service', array('!us' => $name, '!service' => $info['name']));
      $item = on_the_web_build_item($service, $link, $title);
      $output .= theme('on_the_web_icon', array('linked_image' => $item));
    }
  }
  
  // Add the RSS feed icon
  $feed = variable_get('on_the_web_feed', FALSE);
  if ($feed) {
    $link =  'rss.xml';
    $title = t('!us RSS feed', array('!us' => $name));
    $item = on_the_web_build_item('rss', $link, $title);
    $output .= theme('on_the_web_icon', array('linked_image' => $item));
  }
   $attributes  = array('title' => t('Icons by komodomedia.com'));
  if (variable_get('on_the_web_target', TRUE) == TRUE) {
    $attributes['target'] = '_blank';
  }

  return $output;
}

/**
 * Services
 *
 * @return 
 *    List of services with icons.
 */
function on_the_web_get_services() {
  return array(
    'twitter' => array('name' => 'Twitter'),
    'facebook' => array('name' => 'Facebook'),
    'youtube' => array('name' => 'YouTube'),
    'flickr' => array('name' => 'Flickr'),
    'myspace' => array('name' => 'MySpace'),
    'linkedin' => array('name' => 'LinkedIn'),
    'itunes' => array('name' => 'iTunes'),
    'delicious' => array('name' => 'Delicious'),
    'friendfeed' => array('name' => 'FriendFeed')
    );
}

/**
 * Implementation of hook_theme().
 */
function on_the_web_theme($existing, $type, $theme, $path) {
  return array(
    'on_the_web_icon' => array(
      'variables' => array('linked_image' => NULL),
    ),
  );
}

/**
 * Theme function
 *
 * @param $linked_image
 *    Linked icon.
 * @return 
 *    Linked icon with wrapper markup.
 */
function theme_on_the_web_icon($variables) {
  if ($variables['linked_image']) {
    $output = '<span class="on-the-web">' . $variables['linked_image'] . '</span>';
    return $output;
  }
  return;
}

/**
 * Theme function
 *
 * @param $service
 *    Icon for appropriate service.
 * @param $link
 *    URL where link should point.
 * @param $title
 *    Title attribute for the link tag.
 *
 * @return 
 *    Linked icon with wrapper markup.
 */
function on_the_web_build_item($service, $link, $title) {
  // Get the size.
  $size = variable_get('on_the_web_size', 'sm'); 
  
  // Assemble necessary variables for building the image.
  $variables = array(
    'path' => drupal_get_path('module', 'on_the_web') . '/images/' . $size . '/' . $service . '.png', 
    'title' => $title,
    'title' => $title,
  );
  
  // Build the img tag.
  $image = theme('image', $variables);
  
  // Determine attributes for the link
  $attributes  = array('title' => $title);
  if (variable_get('on_the_web_target', TRUE) == TRUE) {
    $attributes['target'] = '_blank';
  }
  
  // Link the image.
  $linked_image = l($image, $link, array('attributes' => $attributes, 'html' => TRUE));
  
  return $linked_image;
}